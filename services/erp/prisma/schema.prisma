generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id              Int              @id @default(autoincrement())
  full_name       String
  email           String?
  phone_number    String
  address         String
  created_at      DateTime         @default(now())
  deleted         Boolean          @default(false)
  deleted_at      DateTime?
  Employees       Employees?
  Representatives Representatives?
  Suppliers       Suppliers?
  Clients         Clients?
}

model Employees {
  id                  Int                   @id @default(autoincrement())
  user_id             Int                   @unique
  user                Users                 @relation(fields: [user_id], references: [id])
  username            String                @unique
  password            String
  salary              Decimal               @db.Decimal(12, 2)
  role_id             Int
  role                Roles                 @relation(fields: [role_id], references: [id])
  EmployeePermissions EmployeePermissions[]
  Suppliers           Suppliers[]
  Clients             Clients[]

  @@index([role_id])
}

model Roles {
  id         Int         @id @default(autoincrement())
  name       String
  created_at DateTime    @default(now())
  Employees  Employees[]
}

model Permissions {
  id                   Int                   @id @default(autoincrement())
  name                 String
  employee_permissions EmployeePermissions[]
}

model EmployeePermissions {
  employee_id   Int
  employee      Employees   @relation(fields: [employee_id], references: [id])
  permission_id Int
  permission    Permissions @relation(fields: [permission_id], references: [id])

  @@id([employee_id, permission_id])
}

model Representatives {
  id              Int     @id @default(autoincrement())
  user_id         Int     @unique
  user            Users   @relation(fields: [user_id], references: [id])
  note            String?
  commission_rate Decimal @db.Decimal(5, 2)
}

model Suppliers {
  id                     Int       @id @default(autoincrement())
  user_id                Int       @unique
  user                   Users     @relation(fields: [user_id], references: [id])
  local_point_manager_id Int
  local_point_manager    Employees @relation(fields: [local_point_manager_id], references: [id])
  note                   String?

  @@index([local_point_manager_id])
}

model Clients {
  id                     Int       @id @default(autoincrement())
  user_id                Int       @unique
  user                   Users     @relation(fields: [user_id], references: [id])
  local_point_manager_id Int
  local_point_manager    Employees @relation(fields: [local_point_manager_id], references: [id])

  @@index([local_point_manager_id])
}
